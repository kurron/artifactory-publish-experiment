apply plugin: 'com.jfrog.artifactory'

artifactory {
  contextUrl = 'http://cd1:81/artifactory/'   //The base Artifactory URL if not overridden by the publisher/resolver
  publish {
    contextUrl = 'http://cd1:81/artifactory/'   //The base Artifactory URL for the publisher
    //A closure defining publishing information
    repository {
      repoKey = 'publishing-test'   //The Artifactory repository key to publish to
      username = 'SVNBuild'          //The publisher user name
      password = 'Snoopy*09'       //The publisher password
      ivy {
//      Optional section for configuring Ivy publication (when publishIvy = true). Assumes Maven repo layout if not specified
//      ivyLayout = '[organization]/[module]/[revision]/[type]s/ivy-[revision].xml'
//      artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
//      mavenCompatible = true //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
      }
    }
    defaults {
        //This closure defines defaults for all 'artifactoryPublish' tasks of all projects the plugin is applied to
        publications ('ivyJava','mavenJava','foo')                     //Optional list of publications (names or objects) to publish.
        properties = ['qa.level': 'basic', 'q.os': 'win32, deb, osx']  //Optional map of properties to attach to all published artifacts
        /*
        The properties closure in the "defaults" task uses the following syntax:
        properties {
            publicationName 'group:module:version:classifier@type', key1:'value1', key2:'value2', ...
        }
        publicationName: A valid name for a publication of the project. You can use all to apply the properties to all publications.
        group:module:version:classifier@type: A filter that specifies the artifacts to which properties should be attached. 
        The filter may contain wildcards: * for all characters or ? for a single character.
        key:'value': A list of key/value properties that will be attached to to the published artifacts matching the filter. 
        */
        properties {                                                   //Optional closure to attach properties to artifacts based on a list of artifact patterns per project publication
            foo '*:*:*:*@*', platform: 'linux', 'win64'                //The property platform=linux,win64 will be set on all artifacts in foo publication
            mavenJava 'org.jfrog:*:*:*@*', key1: 'val1'                //The property key1=val1 will be set on all artifacts part of the mavenJava publication and with group org.jfrog
            all 'org.jfrog:shared:1.?:*@*', key2: 'val2', key3: 'val3' //The properties key2 and key3 will be set on all published artifacts (all publications) with group:artifact:version 
                                                                       //equal to org.jfrog:shared:1.?
        }
        publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
        publishArtifacts = true   //Publish artifacts to Artifactory (true by default)
    }
  }
  resolve {
    contextUrl = 'http://repo.myorg.com/artifactory'   //The base Artifactory URL for the resolver
    repository {
      +repoKey = 'libs-releases'  //The Artifactory (preferably virtual) repository key to resolve from
      username = 'resolver'       //Optional resolver user name (leave out to use anonymous resolution)
      password = 'resolverPaS*'   //The resolver password
      maven = true                //Resolve Maven-style artifacts and descriptors (true by default)
      ivy {
        //Optional section for configuring Ivy-style resolution. Assumes Maven repo layout if If not specified
        ivyLayout = ...
        artifactLayout = ...
        mavenCompatible = ...
      }
    }
  }
  // Redefine basic properties of the build info object
  clientConfig.setIncludeEnvVars(true)
  clientConfig.info.addEnvironmentProperty('test.adding.dynVar',new java.util.Date().toString())
  clientConfig.info.setBuildName('new-strange-name')
  clientConfig.info.setBuildNumber('' + new java.util.Random(System.currentTimeMillis()).nextInt(20000))
}
